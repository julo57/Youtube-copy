{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amiku\\\\Documents\\\\java dorba\\\\Youtube-copy\\\\Frontend\\\\src\\\\components\\\\VideoDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext'; // Ensure you have an AuthContext to provide user details\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useAuth(); // Get the authenticated user\n  const [video, setVideo] = useState(null);\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState('');\n  const [subscribed, setSubscribed] = useState(false);\n  useEffect(() => {\n    const fetchVideo = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/videos/${id}`);\n        setVideo(response.data);\n        setLikes(response.data.likes);\n        setDislikes(response.data.dislikes);\n        setComments(response.data.comments);\n      } catch (error) {\n        setError('Error fetching video details.');\n        console.error(error);\n      }\n    };\n    fetchVideo();\n  }, [id]);\n  const handleLike = async () => {\n    if (!user) {\n      setError('You must be logged in to like.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8080/api/videos/${id}/like`, null, {\n        params: {\n          username: user.username\n        }\n      });\n      setLikes(likes + 1);\n    } catch (error) {\n      console.error('Error liking the video:', error);\n    }\n  };\n  const handleDislike = async () => {\n    if (!user) {\n      setError('You must be logged in to dislike.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8080/api/videos/${id}/dislike`, null, {\n        params: {\n          username: user.username\n        }\n      });\n      setDislikes(dislikes + 1);\n    } catch (error) {\n      console.error('Error disliking the video:', error);\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be logged in to comment.');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/api/videos/${id}/comment`, {\n        text: newComment,\n        username: user.username // Include the username of the authenticated user\n      });\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding a comment:', error);\n      setError('Error adding a comment. Please try again.');\n    }\n  };\n  const handleSubscribe = async () => {\n    if (!user) {\n      setError('You must be logged in to subscribe.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8080/api/videos/subscribe`, {\n        subscriber: user.username,\n        subscribedTo: video.username\n      });\n      setSubscribed(true);\n    } catch (error) {\n      console.error('Error subscribing:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-detail-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this), video && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        width: \"640\",\n        height: \"360\",\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:8080${video.url}`,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLike,\n          children: [\"Like (\", likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDislike,\n          children: [\"Dislike (\", dislikes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), !subscribed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubscribe,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add a comment...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"by \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoDetail, \"m7sgjQyYMN7CBG3kK2uDgZM/0ck=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = VideoDetail;\nexport default VideoDetail;\nvar _c;\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoDetail","_s","id","user","video","setVideo","likes","setLikes","dislikes","setDislikes","comments","setComments","newComment","setNewComment","error","setError","subscribed","setSubscribed","fetchVideo","response","get","data","console","handleLike","post","params","username","handleDislike","handleCommentSubmit","e","preventDefault","text","handleSubscribe","subscriber","subscribedTo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","controls","src","url","type","onClick","onSubmit","value","onChange","target","placeholder","required","map","comment","index","_c","$RefreshReg$"],"sources":["C:/Users/amiku/Documents/java dorba/Youtube-copy/Frontend/src/components/VideoDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../AuthContext'; // Ensure you have an AuthContext to provide user details\r\n\r\nconst VideoDetail = () => {\r\n    const { id } = useParams();\r\n    const { user } = useAuth(); // Get the authenticated user\r\n    const [video, setVideo] = useState(null);\r\n    const [likes, setLikes] = useState(0);\r\n    const [dislikes, setDislikes] = useState(0);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [subscribed, setSubscribed] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchVideo = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/videos/${id}`);\r\n                setVideo(response.data);\r\n                setLikes(response.data.likes);\r\n                setDislikes(response.data.dislikes);\r\n                setComments(response.data.comments);\r\n            } catch (error) {\r\n                setError('Error fetching video details.');\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchVideo();\r\n    }, [id]);\r\n\r\n    const handleLike = async () => {\r\n        if (!user) {\r\n            setError('You must be logged in to like.');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`http://localhost:8080/api/videos/${id}/like`, null, { params: { username: user.username } });\r\n            setLikes(likes + 1);\r\n        } catch (error) {\r\n            console.error('Error liking the video:', error);\r\n        }\r\n    };\r\n\r\n    const handleDislike = async () => {\r\n        if (!user) {\r\n            setError('You must be logged in to dislike.');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`http://localhost:8080/api/videos/${id}/dislike`, null, { params: { username: user.username } });\r\n            setDislikes(dislikes + 1);\r\n        } catch (error) {\r\n            console.error('Error disliking the video:', error);\r\n        }\r\n    };\r\n\r\n    const handleCommentSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!user) {\r\n            setError('You must be logged in to comment.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`http://localhost:8080/api/videos/${id}/comment`, {\r\n                text: newComment,\r\n                username: user.username // Include the username of the authenticated user\r\n            });\r\n            setComments([...comments, response.data]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding a comment:', error);\r\n            setError('Error adding a comment. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSubscribe = async () => {\r\n        if (!user) {\r\n            setError('You must be logged in to subscribe.');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`http://localhost:8080/api/videos/subscribe`, { subscriber: user.username, subscribedTo: video.username });\r\n            setSubscribed(true);\r\n        } catch (error) {\r\n            console.error('Error subscribing:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-detail-container\">\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {video && (\r\n                <>\r\n                    <h1>{video.title}</h1>\r\n                    <video width=\"640\" height=\"360\" controls>\r\n                        <source src={`http://localhost:8080${video.url}`} type=\"video/mp4\" />\r\n                        Your browser does not support the video tag.\r\n                    </video>\r\n                    <div className=\"video-actions\">\r\n                        <button onClick={handleLike}>Like ({likes})</button>\r\n                        <button onClick={handleDislike}>Dislike ({dislikes})</button>\r\n                        {!subscribed && <button onClick={handleSubscribe}>Subscribe</button>}\r\n                    </div>\r\n                    <div className=\"comments-section\">\r\n                        <h2>Comments</h2>\r\n                        <form onSubmit={handleCommentSubmit}>\r\n                            <textarea\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                                placeholder=\"Add a comment...\"\r\n                                required\r\n                            />\r\n                            <button type=\"submit\">Submit</button>\r\n                        </form>\r\n                        <div className=\"comments-list\">\r\n                            {comments.map((comment, index) => (\r\n                                <div key={index} className=\"comment\">\r\n                                    <p>{comment.text}</p>\r\n                                    <small>by {comment.username}</small>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}